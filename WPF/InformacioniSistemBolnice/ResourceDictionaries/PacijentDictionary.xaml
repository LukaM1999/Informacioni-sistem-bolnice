<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                        xmlns:system="clr-namespace:System;assembly=System.Runtime"
                        xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
                        xmlns:views="clr-namespace:InformacioniSistemBolnice.Views.PacijentView">
    
    <SolidColorBrush x:Key="ButtonBackground" Color="#ff2a17" />
        <SolidColorBrush x:Key="ButtonFocusedBackground" Color="#ffc288"/>
        <SolidColorBrush x:Key="ButtonMouseOverBackground" Color="#ff8a7a" />

        <Style x:Key="IconTextButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="{DynamicResource ButtonBackground}" />
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="ToolTipService.ShowOnDisabled" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Padding="10" Background="{TemplateBinding Background}" BorderBrush="Black" BorderThickness="0">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{DynamicResource ButtonMouseOverBackground}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.25"/>
                </Trigger>
            </Style.Triggers>
            <Style.Resources>
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="20" />
                </Style>
            </Style.Resources>
        </Style>

        <Style x:Key="ToggleButtonStyle" TargetType="ToggleButton">
            <Setter Property="Background" Value="{DynamicResource ButtonBackground}" />
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Padding="10" Background="{TemplateBinding Background}" BorderBrush="Black" BorderThickness="0">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{DynamicResource ButtonMouseOverBackground}"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Foreground" Value="{DynamicResource ButtonFocusedBackground}"></Setter>
                </Trigger>
            </Style.Triggers>
            <Style.Resources>
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="20" />
                </Style>
            </Style.Resources>
        </Style>

        <Style x:Key="NavigationListBoxStyle" TargetType="{x:Type ListBox}">
            <Setter Property="Background" Value="#ff2a17"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="SelectedIndex" Value="1"/>
            <Setter Property="Width" Value="Auto"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBox}">
                        <Border Background="{TemplateBinding Background}"
                                BorderThickness="0"
                                Padding="0"
                                SnapsToDevicePixels="true">
                            <ScrollViewer Padding="{TemplateBinding Padding}"
                                          Focusable="false">
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="NavigationListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="ToolTip" Value="{Binding}"/>
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="HorizontalContentAlignment" 
                    Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" 
                    Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border x:Name="Bd"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="5,0,0,0" 
                                Background="{TemplateBinding Background}"
                                Padding="0,5,5,5"
                                SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter TargetName="Bd" Property="BorderBrush" Value="{DynamicResource ButtonFocusedBackground}"/>
                                <Setter Property="Foreground" Value="{DynamicResource ButtonFocusedBackground}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true"/>
                                    <Condition Property="Selector.IsSelectionActive" Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="#ffc288"/>
                                <Setter Property="Foreground" Value="{DynamicResource ButtonFocusedBackground}"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>             
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                    <Condition Property="IsSelected" Value="False"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" Value="{DynamicResource ButtonMouseOverBackground}"/>
                                <Setter TargetName="Bd" Property="BorderThickness" Value="0"/>
                                <Setter Property="Margin" Value="-5,0,-10,0"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                    <Condition Property="IsSelected" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" Value="{DynamicResource ButtonMouseOverBackground}"/>
                                <Setter TargetName="Bd" Property="BorderThickness" Value="5,0,0,0"/>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <DataTemplate x:Key="NavigationDataTemplate">
            <StackPanel>
                <iconPacks:PackIconMaterial x:Name="MenuItemIcon" VerticalAlignment="Center" 
                                        HorizontalAlignment="Center" Margin="0" Height="50"
                                            Padding="-8"/>
                <TextBlock x:Name="MenuItemText"
                           HorizontalAlignment="Center" 
                           VerticalAlignment="Bottom" 
                           FontWeight="SemiBold" />
            </StackPanel>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding}" Value="Profil">
                    <Setter TargetName="MenuItemIcon" Property="Kind" Value="Account"/>
                    <Setter TargetName="MenuItemText" Property="TextBlock.Text" Value="Profil"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding}" Value="Obaveštenja">
                    <Setter TargetName="MenuItemIcon" Property="Kind" Value="Bell"/>
                    <Setter TargetName="MenuItemText" Property="TextBlock.Text" Value="Obaveštenja"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding}" Value="Kalendar">
                    <Setter TargetName="MenuItemIcon" Property="Kind" Value="Calendar"/>
                    <Setter TargetName="MenuItemText" Property="TextBlock.Text" Value="Kalendar"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding}" Value="Istorija">
                    <Setter TargetName="MenuItemIcon" Property="Kind" Value="History"/>
                    <Setter TargetName="MenuItemText" Property="TextBlock.Text" Value="Istorija"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding}" Value="Terapija">
                    <Setter TargetName="MenuItemIcon" Property="Kind" Value="Pill"/>
                    <Setter TargetName="MenuItemText" Property="TextBlock.Text" Value="Terapija"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding}" Value="Pomoc">
                    <Setter TargetName="MenuItemIcon" Property="Kind" Value="HelpCircle"/>
                    <Setter TargetName="MenuItemText" Property="TextBlock.Text" Value="Pomoć"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding}" Value="Odjava">
                    <Setter TargetName="MenuItemIcon" Property="Kind" Value="LogoutVariant"/>
                    <Setter TargetName="MenuItemText" Property="TextBlock.Text" Value="Odjava"/>
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>

        <x:Array x:Key="NavigationMenuItems" Type="system:String">
            <system:String>Profil</system:String>
            <system:String>Kalendar</system:String>
            <system:String>Obaveštenja</system:String>
            <system:String>Istorija</system:String>
            <system:String>Terapija</system:String>
            <system:String>Pomoc</system:String>
            <system:String>Odjava</system:String>
        </x:Array>

        <DataTemplate x:Key="ProfilViewTemplate">
            <views:ProfilView/>
        </DataTemplate>
        <DataTemplate x:Key="KalendarViewTemplate">
            <views:KalendarView/>
        </DataTemplate>
        <DataTemplate x:Key="IstorijaViewTemplate">
            <views:IstorijaView/>
        </DataTemplate>
        <DataTemplate x:Key="TerapijaViewTemplate">
            <views:TerapijaView/>
        </DataTemplate>
        <DataTemplate x:Key="ObavestenjeViewTemplate">
            <views:ObavestenjeView/>
        </DataTemplate>

    <Style x:Key="PlaceHolder" TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid>
                        <TextBox Text="{Binding Path=Text,
                                                RelativeSource={RelativeSource TemplatedParent}, 
                                                Mode=TwoWay,
                                                UpdateSourceTrigger=PropertyChanged}"
                                 x:Name="textSource" 
                                 Background="Transparent" 
                                 Panel.ZIndex="2" />
                        <TextBox Text="{TemplateBinding Tag}" Background="{TemplateBinding Background}" Panel.ZIndex="1">
                            <TextBox.Style>
                                <Style TargetType="{x:Type TextBox}">
                                    <Setter Property="Foreground" Value="Transparent"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=Text, Source={x:Reference textSource}}" Value="">
                                            <Setter Property="Foreground" Value="LightGray"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBox.Style>
                        </TextBox>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="FocusManager.FocusedElement" TargetName="textSource" 
                                    Value="{Binding RelativeSource={RelativeSource Self}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>